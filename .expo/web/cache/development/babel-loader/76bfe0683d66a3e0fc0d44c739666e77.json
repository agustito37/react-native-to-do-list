{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useCallback } from 'react';\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nexport var getTodoItem = function getTodoItem(name) {\n  return {\n    name: name,\n    key: name + Math.random(),\n    checked: false,\n    done: false\n  };\n};\nexport var useAnimatedToggleList = function useAnimatedToggleList(initialValue) {\n  var _useState = useState(initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggleList = _useState2[0],\n      setToggleList = _useState2[1];\n\n  var addToggleItem = useCallback(function (name) {\n    if (!name) return;\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n\n    var newToggleList = _toConsumableArray(toggleList);\n\n    newToggleList.push(getTodoItem(name));\n    setToggleList(newToggleList);\n  }, [toggleList]);\n  var toggleItem = useCallback(function (key) {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    setToggleList(function (current) {\n      var newList = _toConsumableArray(toggleList);\n\n      var item = newList.find(function (item) {\n        return item.key === key;\n      });\n      item.checked = !item.checked;\n      return newList;\n    });\n    setTimeout(function () {\n      return setToggleList(function (current) {\n        var newList = _toConsumableArray(toggleList);\n\n        var item = newList.find(function (item) {\n          return item.key === key;\n        });\n        item.done = !item.done;\n        return newList;\n      });\n    }, 100);\n  }, [toggleList]);\n  return [toggleList, toggleItem, addToggleItem];\n};","map":{"version":3,"sources":["/Users/agustin/projects/react-native-to-do-list/utils.js"],"names":["useState","useCallback","getTodoItem","name","key","Math","random","checked","done","useAnimatedToggleList","initialValue","toggleList","setToggleList","addToggleItem","LayoutAnimation","configureNext","Presets","easeInEaseOut","newToggleList","push","toggleItem","current","newList","item","find","setTimeout"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD;AAAA,SAAW;AACpCA,IAAAA,IAAI,EAAJA,IADoC;AAEpCC,IAAAA,GAAG,EAAED,IAAI,GAAGE,IAAI,CAACC,MAAL,EAFwB;AAGpCC,IAAAA,OAAO,EAAE,KAH2B;AAIpCC,IAAAA,IAAI,EAAE;AAJ8B,GAAX;AAAA,CAApB;AAOP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,YAAD,EAAkB;AAAA,kBACjBV,QAAQ,CAACU,YAAD,CADS;AAAA;AAAA,MAC9CC,UAD8C;AAAA,MAClCC,aADkC;;AAGrD,MAAMC,aAAa,GAAGZ,WAAW,CAAC,UAACE,IAAD,EAAU;AAC1C,QAAI,CAACA,IAAL,EAAW;AACXW,IAAAA,eAAe,CAACC,aAAhB,CAA8BD,eAAe,CAACE,OAAhB,CAAwBC,aAAtD;;AACA,QAAMC,aAAa,sBAAOP,UAAP,CAAnB;;AAEAO,IAAAA,aAAa,CAACC,IAAd,CAAmBjB,WAAW,CAACC,IAAD,CAA9B;AAEAS,IAAAA,aAAa,CAACM,aAAD,CAAb;AACD,GARgC,EAQ9B,CAACP,UAAD,CAR8B,CAAjC;AAUA,MAAMS,UAAU,GAAGnB,WAAW,CAAC,UAACG,GAAD,EAAS;AACtCU,IAAAA,eAAe,CAACC,aAAhB,CAA8BD,eAAe,CAACE,OAAhB,CAAwBC,aAAtD;AAEAL,IAAAA,aAAa,CAAC,UAACS,OAAD,EAAa;AACzB,UAAMC,OAAO,sBAAOX,UAAP,CAAb;;AACA,UAAMY,IAAI,GAAGD,OAAO,CAACE,IAAR,CAAa,UAACD,IAAD;AAAA,eAAUA,IAAI,CAACnB,GAAL,KAAaA,GAAvB;AAAA,OAAb,CAAb;AACAmB,MAAAA,IAAI,CAAChB,OAAL,GAAe,CAACgB,IAAI,CAAChB,OAArB;AAEA,aAAOe,OAAP;AACD,KANY,CAAb;AAQAG,IAAAA,UAAU,CACR;AAAA,aAAMb,aAAa,CAAC,UAACS,OAAD,EAAa;AAC/B,YAAMC,OAAO,sBAAOX,UAAP,CAAb;;AACA,YAAMY,IAAI,GAAGD,OAAO,CAACE,IAAR,CAAa,UAACD,IAAD;AAAA,iBAAUA,IAAI,CAACnB,GAAL,KAAaA,GAAvB;AAAA,SAAb,CAAb;AACAmB,QAAAA,IAAI,CAACf,IAAL,GAAY,CAACe,IAAI,CAACf,IAAlB;AAEA,eAAOc,OAAP;AACD,OANkB,CAAnB;AAAA,KADQ,EAQP,GARO,CAAV;AASD,GApB6B,EAoB3B,CAACX,UAAD,CApB2B,CAA9B;AAsBA,SAAO,CAACA,UAAD,EAAaS,UAAb,EAAyBP,aAAzB,CAAP;AACD,CApCM","sourcesContent":["import { useState, useCallback } from 'react';\nimport { LayoutAnimation } from 'react-native';\n\nexport const getTodoItem = (name) => ({\n  name,\n  key: name + Math.random(),\n  checked: false,\n  done: false,\n});\n\nexport const useAnimatedToggleList = (initialValue) => {\n  const [toggleList, setToggleList] = useState(initialValue);\n\n  const addToggleItem = useCallback((name) => {\n    if (!name) return;\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    const newToggleList = [...toggleList];\n\n    newToggleList.push(getTodoItem(name));\n    \n    setToggleList(newToggleList);\n  }, [toggleList]);\n\n  const toggleItem = useCallback((key) => {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n\n    setToggleList((current) => {\n      const newList = [...toggleList];\n      const item = newList.find((item) => item.key === key);\n      item.checked = !item.checked;\n      \n      return newList;\n    });\n\n    setTimeout(\n      () => setToggleList((current) => {\n        const newList = [...toggleList];\n        const item = newList.find((item) => item.key === key);\n        item.done = !item.done;\n\n        return newList;\n      }\n    ), 100);\n  }, [toggleList]);\n\n  return [toggleList, toggleItem, addToggleItem];\n}"]},"metadata":{},"sourceType":"module"}